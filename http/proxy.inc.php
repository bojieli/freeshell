<?php
include_once "verify.inc.php";
include_once "nodes.inc.php";

function update_proxy_conf() {
    $localfile = "/etc/nginx/autogen-conf/freeshell.conf";
    $fp = fopen($localfile, "w");
    if (!$fp)
        return false;
    fwrite($fp, nginx_conf_gen_for_proxy());
    fclose($fp);
    chmod($localfile, 0644);
    return local_update_proxy_conf();
    //ssh_update_proxy_conf($localfile);
}

function get_all_cnames() {
    $rs = checked_mysql_query("SELECT id, domain, is_ssl FROM cname");
    $cnames = array();
    while ($row = mysql_fetch_array($rs)) {
        if (0 == cname_check_norepeat($row['domain'])) {
            if (!isset($cnames[$row['id']]))
                $cnames[$row['id']] = array(array($row['domain'], $row['is_ssl']));
            else
                $cnames[$row['id']][] = array($row['domain'], $row['is_ssl']);
        }
    }
    return $cnames;
}

function nginx_conf_gen_for_proxy() {
    $all_cname = get_all_cnames();
    $conf = '## This file is automatically generated by freeshell. DO NOT MODIFY!';
    $rs = checked_mysql_query("SELECT http_subdomain, 40x_page, 50x_page, force_ssl, nodeno, id FROM shellinfo");
    while ($row = mysql_fetch_array($rs)) {
        $cname = isset($all_cname[$row['id']]) ? $all_cname[$row['id']] : array();
        $domain = $row['http_subdomain'];
        if ($domain != "" && 0 == subdomain_check_norepeat($domain))
            $cname[] = array("$domain.freeshell.ustc.edu.cn", false); // false: do not need ssl key
        if (count($cname) == 0)
            continue; // do not generate entry if empty
        $nodeno = $row['nodeno'];
        $httpport = appid2httpport($row['id']);
        $conf .= conf_for_one_freeshell($cname, $nodeno, $httpport,
            sanitize_url($row['40x_page']),
            sanitize_url($row['50x_page']),
            $row['force_ssl']);
    }
    return $conf;
}

function server_block($server_name, $nodeno, $additional_conf, $httpport, $page40x, $page50x, $force_ssl) {
    return "
server {
        listen 80;
        listen 443;
        listen [::]:80;
        listen [::]:443;
        server_name $server_name;\n".$additional_conf.
        ($force_ssl ? "include conf.d/redirect2https.inc;\n" : "").
        ($page40x ? "error_page 400 403 404 = $page40x;\n" : "").
        ($page50x ? "error_page 500 502 503 504 = $page50x;\n" : "")."
        access_log /var/log/nginx/freeshell-proxy/access.log logverbose;
        error_log  /var/log/nginx/freeshell-proxy/error.log;

        location / {
                proxy_pass       http://s$nodeno.4.freeshell.ustc.edu.cn:$httpport;
                proxy_set_header Host       \$http_host;
                proxy_set_header X-Forwarded-For \$remote_addr;
                proxy_set_header X-Real-IP  \$remote_addr;
                proxy_set_header X-Scheme   \$scheme;
        }
}
";
}

function conf_for_one_freeshell($cname, $nodeno, $httpport, $page40x = null, $page50x = null, $force_ssl = false) {
    $aggregated_server_name = "";
    $retval = "";
    foreach ($cname as $c) {
        if (count($c) != 2)
            continue;
        $domain = $c[0]; // domain
        $server_name = "$domain *.$domain";
        if ($c[1]) { // need ssl key
            $retval .= server_block($server_name, $nodeno, "
        ssl_certificate_key /etc/nginx/freeshell-keys/$domain.key;
        ssl_certificate     /etc/nginx/freeshell-keys/$domain.crt;
",
                        $httpport, $page40x, $page50x, $force_ssl);
        } else {
            $aggregated_server_name .= $server_name." ";
        }
    }
    if ($aggregated_server_name) {
        $retval .= server_block($aggregated_server_name, $nodeno, "", $httpport, $page40x, $page50x, $force_ssl);
    }
    return $retval;
}

function local_update_proxy_conf() {
    list($errno, $output) = local_sudo("/usr/local/bin/safe-reload-nginx");
    return ($errno == 0);
}

function runas_monitor($cmd) {
    list($errno, $output) = local_sudo("-u scgyshell-monitor $cmd");
    return ($errno == 0);
}

function ssh_update_proxy_conf($tmpfile) {
    $host = '202.38.70.159';
    $userhost = "scgyshell-client@$host";
    if (!runas_monitor("/usr/bin/scp $tmpfile $userhost:~/freeshell-proxy"))
        return false;
    if (!runas_monitor("/usr/bin/ssh $userhost chmod 644 freeshell-proxy"))
        return false;
    if (!runas_monitor("/usr/bin/ssh $userhost sudo /etc/init.d/nginx reload"))
        return false;
    return true;
}

function subdomain_check_norepeat($domain) {
    if ($domain == "")
        return 0; // empty domain is allowed
    if (strlen($domain) < 3 || strlen($domain) > 20)
        return 1;
    if (!preg_match('/^[a-z0-9][a-z0-9-]+[a-z0-9]$/', $domain))
        return 2;
    if (in_array($domain, array('master', 'proxy', 'lug', 'freeshell', 'test', 'example')))
        return 3;
    return 0;
}

function subdomain_check($id, $domain) {
    if (!is_numeric($id))
        return -1;
    if ($domain == "")
        return 0; // empty domain is allowed
    $flag = subdomain_check_norepeat($domain);
    if ($flag)
        return $flag;
    $rs = mysql_fetch_array(checked_mysql_query("SELECT * FROM shellinfo WHERE `http_subdomain`='$domain' AND id != $id"));
    if ($rs)
        return 4;
    return 0;
}

function cname_check_norepeat($domain) {
    if (!preg_match('/^([a-z0-9-]+\.)+[a-z0-9-]+$/', $domain))
        return 1;
    if (strstr($domain, 'freeshell.ustc.edu.cn') ||
        strstr($domain, 'blog.ustc.edu.cn') ||
        strstr($domain, 'lug.ustc.edu.cn') ||
        strstr($domain, 'mirrors.ustc.edu.cn') ||
        strstr($domain, 'pxe.ustc.edu.cn'))
        return 2;
    if ($domain == "edu.cn" || $domain == "ustc.edu.cn")
        return 2;

    require_once "tld.inc.php";
    if (is_tld($domain))
        return 1;
    $parts = explode('.', $domain);
    $count = count($parts);
    if (is_tld($parts[$count - 1]))
        return 0;
    if (is_tld($parts[$count - 2] . "." . $parts[$count - 1]))
        return 0;
    return 1;
}

function cname_check($id, $domain) {
    if (!is_numeric($id))
        return -1;
    $flag = cname_check_norepeat($domain);
    if ($flag)
        return $flag;
    $count = mysql_result(checked_mysql_query("SELECT COUNT(*) FROM cname WHERE `domain`='$domain'"), 0);
    if ($count != 0)
        return 3;
    return 0;
}

